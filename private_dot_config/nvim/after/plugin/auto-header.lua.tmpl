local status, headers = pcall(require, "auto-header")
if not status then
	vim.notify("Missing auto-header plugin.")
	return
end

vim.g.mapleader = " "
vim.g.maplocalleader = " "


headers.setup({
	key = "<leader>ah",
	templates = {
		{
			language = "*",
			prefix = "# ",
			block = "",
			block_length = 0,
			before = {},
			after = { "" },
			template = {
				"File: #file_relative_path",
				"Project: #project_name",
				"Creation date: #date_now",
				"Author: #author_name <#author_mail>",
				"-----",
				"Last modified: #date_now",
				"Modified By: #author_name",
				"-----",
				"Copyright © #cp_year #cp_holders - All rights reserved",
			},
			track_change = {
				"File: ",
				"Last modified: ",
				"Modified By: ",
				"Copyright ",
			},
			{
				language = "bash",
				prefix = "# ",
				block = "",
				block_length = 0,
				before = {
					"#!/bin/bash",
					"",
				},
				after = { "" },
				template = {
					"File: #file_relative_path",
					"Project: #project_name",
					"Creation date: #date_now",
					"Author: #author_name <#author_mail>",
					"-----",
					"Last modified: #date_now",
					"Modified By: #author_name",
					"-----",
					"Copyright © #cp_year #cp_holders - All rights reserved",
				},
				track_change = {
					"File: ",
					"Last modified: ",
					"Modified By: ",
					"Copyright ",
				},
			},
		},
		{
			language = "python",
			prefix = "# ",
			block = "",
			block_length = 0,
			before = {
				"#!env python3",
				"",
			},
			after = { "" },
			template = {
				"File: #file_relative_path",
				"Project: #project_name",
				"Creation date: #date_now",
				"Author: #author_name <#author_mail>",
				"-----",
				"Last modified: #date_now",
				"Modified By: #author_name",
				"-----",
				"Copyright © #cp_year #cp_holders - All rights reserved",
			},
			track_change = {
				"File: ",
				"Last modified: ",
				"Modified By: ",
				"Copyright ",
			},
		},
		{
			language = "lua",
			prefix = "-- ",
			block = "",
			block_length = 0,
			before = {},
			after = { "" },
			template = {
				"File: #file_relative_path",
				"Project: #project_name",
				"Creation date: #date_now",
				"Author: #author_name <#author_mail>",
				"-----",
				"Last modified: #date_now",
				"Modified By: #author_name",
				"-----",
				"Copyright © #cp_year #cp_holders - All rights reserved",
			},
			track_change = {
				"File: ",
				"Last modified: ",
				"Modified By: ",
				"Copyright ",
			},
		},
		{
			language = "cpp",
			prefix = "// ",
			block = "",
			block_length = 0,
			before = {},
			after = { "" },
			template = {
				"File: #file_relative_path",
				"Project: #project_name",
				"Creation date: #date_now",
				"Author: #author_name <#author_mail>",
				"-----",
				"Last modified: #date_now",
				"Modified By: #author_name",
				"-----",
				"Copyright © #cp_year Collecte Localisation Satellite (CLS) - All rights reserved",
			},
			track_change = {
				"File: ",
				"Last modified: ",
				"Modified By: ",
				"Copyright ",
			},
		},
		{
			language = "rust",
			prefix = "// ",
			block = "",
			block_length = 0,
			before = {},
			after = {
				"",
			},
			template = {
				"File: #file_relative_path",
				"Project: #project_name",
				"Creation date: #date_now",
				"Author: #author_name <#author_mail>",
				"-----",
				"Last modified: #date_now",
				"Modified By: #author_name",
				"-----",
				"Copyright © #cp_year <#author_name> - All rights reserved",
			},
			track_change = {
				"File: ",
				"Last modified: ",
				"Modified By: ",
				"Copyright ",
			},
		},
	},
	projects = {
		{{ if (eq .chezmoi.hostname "px-1021") -}}
        {
            project_name = "Tools & Utils",
            root = "/",
            create = false,
            update = true,
            data = {
                cp_holders = "Collecte Localisation Satellite (CLS)",
                author_mail = "vberthier@groupscls.com",
            },
        },
        {{ else if (eq .chezmoi.hostname "visu-01" ) -}}
        {},
        {{ else -}}
        {
			project_name = "Vincent’s projects",
			root = "/home/vincent/code/",
			create = true,
			update = true,
			data = {
				cp_holders = "Vincent Berthier",
				author_mail = "vincent.berthier@posteo.org",
			},
		},
		{
			project_name = "Athena’s Crucible",
			root = "/home/vincent/code/athena_crucible/",
			create = true,
			update = true,
			data = {
				cp_holders = "Vincent Berthier",
				author_mail = "vincent.berthier@posteo.org",
			},
		},
		{
			project_name = "auto-header.nvim",
			root = "/home/vincent/code/auto-header.nvim",
			create = false,
			update = true,
			template = {
				"File: #file_relative_path",
				"Project: #project_name",
				"Creation date: #date_now",
				"Author: #author_name",
				"-----",
				"Last modified: #date_now",
				"Modified By: #author_name",
				"-----",
				headers.licenses.MIT,
			},
			data = {
				cp_holders = "Vincent Berthier",
				author_mail = "",
			},
		},
        {{ end -}}
	},
})

local status_wk, wk = pcall(require, "which-key")
if not status_wk then
	print("Could not load which-key, maps will be defaults")
	return
end
wk.register(
{
    ["<leader>"] = {
        i = {
            h = { "<cmd>require('auto-header').add_or_update_header()<CR>", "Add/update file header" },
        },
    },
}, { mode = "n" })
